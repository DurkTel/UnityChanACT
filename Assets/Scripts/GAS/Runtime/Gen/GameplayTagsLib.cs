///////////////////////////////////
//// This is a generated file. ////
////     Do not modify it.     ////
////       Generated by        ////
////   GameplayTagsAsset.Gen.  ////
///////////////////////////////////

using System.Collections.Generic;
using LGameFramework.GameBase;

namespace GAS.Runtime
{
    public static class GameplayTagsLib
    {
        private static GameplayTag s_Command = new GameplayTag("Command");
        /// <summary>
        /// 输入命令
        /// </summary>
        public static GameplayTag Command { get { return s_Command; } }

        private static GameplayTag s_Command_BanCommand = new GameplayTag("Command.BanCommand");
        /// <summary>
        /// 禁止命令
        /// </summary>
        public static GameplayTag Command_BanCommand { get { return s_Command_BanCommand; } }

        private static GameplayTag s_Command_BanCommand_BanMoveCommand = new GameplayTag("Command.BanCommand.BanMoveCommand");
        /// <summary>
        /// 禁止移动命令
        /// </summary>
        public static GameplayTag Command_BanCommand_BanMoveCommand { get { return s_Command_BanCommand_BanMoveCommand; } }

        private static GameplayTag s_Command_Move = new GameplayTag("Command.Move");
        /// <summary>
        /// 移动命令
        /// </summary>
        public static GameplayTag Command_Move { get { return s_Command_Move; } }

        private static GameplayTag s_Command_Fight = new GameplayTag("Command.Fight");
        /// <summary>
        /// 战斗命令
        /// </summary>
        public static GameplayTag Command_Fight { get { return s_Command_Fight; } }

        private static GameplayTag s_Command_Fight_Attack = new GameplayTag("Command.Fight.Attack");
        /// <summary>
        /// 攻击命令
        /// </summary>
        public static GameplayTag Command_Fight_Attack { get { return s_Command_Fight_Attack; } }

        private static GameplayTag s_Event = new GameplayTag("Event");
        /// <summary>
        /// 触发事件
        /// </summary>
        public static GameplayTag Event { get { return s_Event; } }

        private static GameplayTag s_Event_Fight = new GameplayTag("Event.Fight");
        /// <summary>
        /// 战斗相关
        /// </summary>
        public static GameplayTag Event_Fight { get { return s_Event_Fight; } }

        private static GameplayTag s_Event_Fight_Guard = new GameplayTag("Event.Fight.Guard");
        /// <summary>
        /// 格挡
        /// </summary>
        public static GameplayTag Event_Fight_Guard { get { return s_Event_Fight_Guard; } }

        private static GameplayTag s_Event_Fight_SpecialAttack = new GameplayTag("Event.Fight.SpecialAttack");
        /// <summary>
        /// 特殊攻击
        /// </summary>
        public static GameplayTag Event_Fight_SpecialAttack { get { return s_Event_Fight_SpecialAttack; } }

        private static GameplayTag s_Event_Fight_AttackWindup = new GameplayTag("Event.Fight.AttackWindup");
        /// <summary>
        /// 攻击后摇中
        /// </summary>
        public static GameplayTag Event_Fight_AttackWindup { get { return s_Event_Fight_AttackWindup; } }

        private static GameplayTag s_Event_Fight_AttackDelay = new GameplayTag("Event.Fight.AttackDelay");
        /// <summary>
        /// 攻击前摇中
        /// </summary>
        public static GameplayTag Event_Fight_AttackDelay { get { return s_Event_Fight_AttackDelay; } }

        private static GameplayTag s_Event_Locomotion = new GameplayTag("Event.Locomotion");
        /// <summary>
        /// 运动
        /// </summary>
        public static GameplayTag Event_Locomotion { get { return s_Event_Locomotion; } }

        private static GameplayTag s_Event_Locomotion_BanLocomotion = new GameplayTag("Event.Locomotion.BanLocomotion");
        /// <summary>
        /// 禁止移动旋转
        /// </summary>
        public static GameplayTag Event_Locomotion_BanLocomotion { get { return s_Event_Locomotion_BanLocomotion; } }

        private static GameplayTag s_Event_Locomotion_BanRotate = new GameplayTag("Event.Locomotion.BanRotate");
        /// <summary>
        /// 禁止移动
        /// </summary>
        public static GameplayTag Event_Locomotion_BanRotate { get { return s_Event_Locomotion_BanRotate; } }

        private static GameplayTag s_Event_Locomotion_BanMove = new GameplayTag("Event.Locomotion.BanMove");
        /// <summary>
        /// 禁止移动
        /// </summary>
        public static GameplayTag Event_Locomotion_BanMove { get { return s_Event_Locomotion_BanMove; } }

        private static GameplayTag s_Event_Locomotion_Dodge = new GameplayTag("Event.Locomotion.Dodge");
        /// <summary>
        /// 闪避
        /// </summary>
        public static GameplayTag Event_Locomotion_Dodge { get { return s_Event_Locomotion_Dodge; } }

        private static GameplayTag s_Event_Locomotion_Sprint = new GameplayTag("Event.Locomotion.Sprint");
        /// <summary>
        /// 冲刺
        /// </summary>
        public static GameplayTag Event_Locomotion_Sprint { get { return s_Event_Locomotion_Sprint; } }

        private static GameplayTag s_Event_Locomotion_IsMoveing = new GameplayTag("Event.Locomotion.IsMoveing");
        /// <summary>
        /// 移动中
        /// </summary>
        public static GameplayTag Event_Locomotion_IsMoveing { get { return s_Event_Locomotion_IsMoveing; } }

        private static GameplayTag s_Event_Animation = new GameplayTag("Event.Animation");
        /// <summary>
        /// 动画相关的事件
        /// </summary>
        public static GameplayTag Event_Animation { get { return s_Event_Animation; } }

        private static GameplayTag s_Event_Animation_RootMotion = new GameplayTag("Event.Animation.RootMotion");
        /// <summary>
        /// 开启根运动
        /// </summary>
        public static GameplayTag Event_Animation_RootMotion { get { return s_Event_Animation_RootMotion; } }

        private static GameplayTag s_Camp = new GameplayTag("Camp");
        /// <summary>
        /// 阵营
        /// </summary>
        public static GameplayTag Camp { get { return s_Camp; } }

        private static GameplayTag s_Camp_Enemy = new GameplayTag("Camp.Enemy");
        /// <summary>
        /// 敌方阵营
        /// </summary>
        public static GameplayTag Camp_Enemy { get { return s_Camp_Enemy; } }

        private static GameplayTag s_Camp_Friendly = new GameplayTag("Camp.Friendly");
        /// <summary>
        /// 友方阵营
        /// </summary>
        public static GameplayTag Camp_Friendly { get { return s_Camp_Friendly; } }

        private static GameplayTag s_Ability = new GameplayTag("Ability");
        /// <summary>
        /// 能力标签
        /// </summary>
        public static GameplayTag Ability { get { return s_Ability; } }

        private static GameplayTag s_Ability_Action = new GameplayTag("Ability.Action");
        /// <summary>
        /// 行为
        /// </summary>
        public static GameplayTag Ability_Action { get { return s_Ability_Action; } }

        private static GameplayTag s_Ability_Fight = new GameplayTag("Ability.Fight");
        /// <summary>
        /// 战斗
        /// </summary>
        public static GameplayTag Ability_Fight { get { return s_Ability_Fight; } }

        private static GameplayTag s_Ability_Fight_Guard = new GameplayTag("Ability.Fight.Guard");
        /// <summary>
        /// 格挡
        /// </summary>
        public static GameplayTag Ability_Fight_Guard { get { return s_Ability_Fight_Guard; } }

        private static GameplayTag s_Ability_Fight_Skill = new GameplayTag("Ability.Fight.Skill");
        /// <summary>
        /// 技能
        /// </summary>
        public static GameplayTag Ability_Fight_Skill { get { return s_Ability_Fight_Skill; } }

        private static GameplayTag s_Ability_Locomotion = new GameplayTag("Ability.Locomotion");
        /// <summary>
        /// 运动
        /// </summary>
        public static GameplayTag Ability_Locomotion { get { return s_Ability_Locomotion; } }

        private static GameplayTag s_Ability_Locomotion_Sprint = new GameplayTag("Ability.Locomotion.Sprint");
        /// <summary>
        /// 冲刺
        /// </summary>
        public static GameplayTag Ability_Locomotion_Sprint { get { return s_Ability_Locomotion_Sprint; } }

        private static GameplayTag s_Ability_Locomotion_NotCancelled = new GameplayTag("Ability.Locomotion.NotCancelled");
        /// <summary>
        /// 不可取消
        /// </summary>
        public static GameplayTag Ability_Locomotion_NotCancelled { get { return s_Ability_Locomotion_NotCancelled; } }

        private static GameplayTag s_Ability_Locomotion_SharpTurn = new GameplayTag("Ability.Locomotion.SharpTurn");
        /// <summary>
        /// 急转弯
        /// </summary>
        public static GameplayTag Ability_Locomotion_SharpTurn { get { return s_Ability_Locomotion_SharpTurn; } }


        /// <summary>
        /// 标签Map
        /// </summary>
        public static Dictionary<string, GameplayTag> TagMap = new Dictionary<string, GameplayTag>
        {
            ["Command"] = Command,
            ["Command.BanCommand"] = Command_BanCommand,
            ["Command.BanCommand.BanMoveCommand"] = Command_BanCommand_BanMoveCommand,
            ["Command.Move"] = Command_Move,
            ["Command.Fight"] = Command_Fight,
            ["Command.Fight.Attack"] = Command_Fight_Attack,
            ["Event"] = Event,
            ["Event.Fight"] = Event_Fight,
            ["Event.Fight.Guard"] = Event_Fight_Guard,
            ["Event.Fight.SpecialAttack"] = Event_Fight_SpecialAttack,
            ["Event.Fight.AttackWindup"] = Event_Fight_AttackWindup,
            ["Event.Fight.AttackDelay"] = Event_Fight_AttackDelay,
            ["Event.Locomotion"] = Event_Locomotion,
            ["Event.Locomotion.BanLocomotion"] = Event_Locomotion_BanLocomotion,
            ["Event.Locomotion.BanRotate"] = Event_Locomotion_BanRotate,
            ["Event.Locomotion.BanMove"] = Event_Locomotion_BanMove,
            ["Event.Locomotion.Dodge"] = Event_Locomotion_Dodge,
            ["Event.Locomotion.Sprint"] = Event_Locomotion_Sprint,
            ["Event.Locomotion.IsMoveing"] = Event_Locomotion_IsMoveing,
            ["Event.Animation"] = Event_Animation,
            ["Event.Animation.RootMotion"] = Event_Animation_RootMotion,
            ["Camp"] = Camp,
            ["Camp.Enemy"] = Camp_Enemy,
            ["Camp.Friendly"] = Camp_Friendly,
            ["Ability"] = Ability,
            ["Ability.Action"] = Ability_Action,
            ["Ability.Fight"] = Ability_Fight,
            ["Ability.Fight.Guard"] = Ability_Fight_Guard,
            ["Ability.Fight.Skill"] = Ability_Fight_Skill,
            ["Ability.Locomotion"] = Ability_Locomotion,
            ["Ability.Locomotion.Sprint"] = Ability_Locomotion_Sprint,
            ["Ability.Locomotion.NotCancelled"] = Ability_Locomotion_NotCancelled,
            ["Ability.Locomotion.SharpTurn"] = Ability_Locomotion_SharpTurn,
        };
    }
}